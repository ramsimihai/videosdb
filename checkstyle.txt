Starting audit...
[ERROR] /home/student/videosdb/./src/classes/Show.java:8:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/student/videosdb/./src/classes/Show.java:10:23: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/student/videosdb/./src/classes/Show.java:10:24: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/videosdb/./src/classes/Show.java:12: Line is longer than 100 characters (found 143). [LineLength]
[ERROR] /home/student/videosdb/./src/classes/Show.java:12:21: Parameter title should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/Show.java:12:35: Parameter cast should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/Show.java:12:59: Parameter genres should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/Show.java:12:85: Parameter year should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/Show.java:12:95: Parameter numberOfSeasons should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/Show.java:12:116: Parameter seasons should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/Show.java:18:9: Class 'Show' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Show.java:18:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/videosdb/./src/classes/Show.java:27:9: Class 'Show' looks like designed for extension (can be subclassed), but the method 'getSeasons' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'getSeasons' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Show.java:31:9: Class 'Show' looks like designed for extension (can be subclassed), but the method 'setSeasons' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'setSeasons' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Show.java:31:32: Parameter seasons should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/Show.java:36:9: Class 'Show' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Show' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Show.java:36:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/videosdb/./src/classes/Actor.java:12:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/student/videosdb/./src/classes/Actor.java:17:24: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/student/videosdb/./src/classes/Actor.java:17:25: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/videosdb/./src/classes/Actor.java:19: Line is longer than 100 characters (found 131). [LineLength]
[ERROR] /home/student/videosdb/./src/classes/Actor.java:19:22: Parameter name should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/Actor.java:19:35: Parameter careerDescription should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/Actor.java:19:61: Parameter filmography should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/Actor.java:19:92: Parameter awards should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/Actor.java:26:9: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Actor.java:26:29: Parameter name should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/Actor.java:30:9: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'setAwards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'setAwards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Actor.java:30:31: Parameter awards should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/Actor.java:34:9: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'setCareerDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'setCareerDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Actor.java:34:42: Parameter careerDescription should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/Actor.java:38:9: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'setFilmography' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'setFilmography' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Actor.java:38:36: Parameter filmography should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/Actor.java:42:9: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getAwards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getAwards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Actor.java:46:9: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Actor.java:50:9: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getFilmography' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getFilmography' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Actor.java:54:9: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getCareerDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getCareerDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Actor.java:58:9: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getAverageRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getAverageRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Actor.java:58:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/videosdb/./src/classes/Actor.java:63: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] /home/student/videosdb/./src/classes/Actor.java:64:33: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/student/videosdb/./src/classes/Actor.java:88:9: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getTotalNoAwards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getTotalNoAwards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Actor.java:88:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/videosdb/./src/classes/Movie.java:6:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/student/videosdb/./src/classes/Movie.java:8:24: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/student/videosdb/./src/classes/Movie.java:8:25: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/videosdb/./src/classes/Movie.java:10: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] /home/student/videosdb/./src/classes/Movie.java:10:22: Parameter title should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/Movie.java:10:36: Parameter cast should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/Movie.java:10:60: Parameter genres should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/Movie.java:10:86: Parameter year should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/Movie.java:10:96: Parameter duration should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/Movie.java:15:9: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Movie.java:15:33: Parameter duration should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/Movie.java:19:9: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Movie.java:23:9: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Movie.java:23:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/videosdb/./src/classes/Video.java:7:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/student/videosdb/./src/classes/Video.java:16:24: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/student/videosdb/./src/classes/Video.java:16:25: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/videosdb/./src/classes/Video.java:18:22: Parameter title should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/Video.java:18:36: Parameter cast should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/Video.java:18:60: Parameter genres should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/Video.java:18:86: Parameter year should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/Video.java:29:9: Class 'Video' looks like designed for extension (can be subclassed), but the method 'getRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Video' final or making the method 'getRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Video.java:33:9: Class 'Video' looks like designed for extension (can be subclassed), but the method 'getFavCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Video' final or making the method 'getFavCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Video.java:37:9: Class 'Video' looks like designed for extension (can be subclassed), but the method 'getViewCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Video' final or making the method 'getViewCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Video.java:41:9: Class 'Video' looks like designed for extension (can be subclassed), but the method 'increaseFavCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Video' final or making the method 'increaseFavCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Video.java:41:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/videosdb/./src/classes/Video.java:45:9: Class 'Video' looks like designed for extension (can be subclassed), but the method 'getYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Video' final or making the method 'getYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Video.java:49:9: Class 'Video' looks like designed for extension (can be subclassed), but the method 'getCast' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Video' final or making the method 'getCast' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Video.java:53:9: Class 'Video' looks like designed for extension (can be subclassed), but the method 'getTitle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Video' final or making the method 'getTitle' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Video.java:57:9: Class 'Video' looks like designed for extension (can be subclassed), but the method 'getGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Video' final or making the method 'getGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Video.java:61:9: Class 'Video' looks like designed for extension (can be subclassed), but the method 'setGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Video' final or making the method 'setGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Video.java:61:31: Parameter genres should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/Video.java:65:9: Class 'Video' looks like designed for extension (can be subclassed), but the method 'setCast' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Video' final or making the method 'setCast' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Video.java:65:29: Parameter cast should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/Video.java:69:9: Class 'Video' looks like designed for extension (can be subclassed), but the method 'setYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Video' final or making the method 'setYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Video.java:69:29: Parameter year should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/Video.java:73:9: Class 'Video' looks like designed for extension (can be subclassed), but the method 'setTitle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Video' final or making the method 'setTitle' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Video.java:73:30: Parameter title should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/Video.java:77:9: Class 'Video' looks like designed for extension (can be subclassed), but the method 'setFavCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Video' final or making the method 'setFavCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Video.java:77:33: Parameter favCount should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/Video.java:81:9: Class 'Video' looks like designed for extension (can be subclassed), but the method 'setRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Video' final or making the method 'setRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Video.java:81:32: Parameter ratings should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/Video.java:85:9: Class 'Video' looks like designed for extension (can be subclassed), but the method 'setViewCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Video' final or making the method 'setViewCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Video.java:85:34: Parameter viewCount should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/Video.java:89:9: Class 'Video' looks like designed for extension (can be subclassed), but the method 'getNumberOfSeasons' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Video' final or making the method 'getNumberOfSeasons' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Video.java:93:9: Class 'Video' looks like designed for extension (can be subclassed), but the method 'setNumberOfSeasons' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Video' final or making the method 'setNumberOfSeasons' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/Video.java:93:40: Parameter numberOfSeasons should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/Video.java:97:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/videosdb/./src/classes/Video.java:99:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/videosdb/./src/classes/User.java:10:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/student/videosdb/./src/classes/User.java:16:23: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/student/videosdb/./src/classes/User.java:16:24: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/videosdb/./src/classes/User.java:18:21: Parameter username should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/User.java:18:38: Parameter subscriptionType should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/User.java:19:50: Parameter history should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/User.java:20:50: Parameter favoriteMovies should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/User.java:29:9: Class 'User' looks like designed for extension (can be subclassed), but the method 'getNoRatingsGiven' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getNoRatingsGiven' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/User.java:33:9: Class 'User' looks like designed for extension (can be subclassed), but the method 'setFavouriteVideos' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setFavouriteVideos' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/User.java:33:40: Parameter favoriteMovies should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/User.java:37:9: Class 'User' looks like designed for extension (can be subclassed), but the method 'setHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/User.java:37:32: Parameter history should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/User.java:41:9: Class 'User' looks like designed for extension (can be subclassed), but the method 'setSubscriptionType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setSubscriptionType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/User.java:41:41: Parameter subscriptionType should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/User.java:45:9: Class 'User' looks like designed for extension (can be subclassed), but the method 'setUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/User.java:45:33: Parameter username should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/User.java:49:9: Class 'User' looks like designed for extension (can be subclassed), but the method 'getFavouriteVideos' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getFavouriteVideos' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/User.java:53:9: Class 'User' looks like designed for extension (can be subclassed), but the method 'getHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/User.java:57:9: Class 'User' looks like designed for extension (can be subclassed), but the method 'getSubscriptionType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getSubscriptionType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/User.java:61:9: Class 'User' looks like designed for extension (can be subclassed), but the method 'getUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/User.java:65:9: Class 'User' looks like designed for extension (can be subclassed), but the method 'incNoRatingsGiven' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'incNoRatingsGiven' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/User.java:65:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/videosdb/./src/classes/User.java:69:9: Class 'User' looks like designed for extension (can be subclassed), but the method 'addToFavourites' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'addToFavourites' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/User.java:69:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/videosdb/./src/classes/User.java:69:39: Parameter title should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/User.java:71: Line is longer than 100 characters (found 167). [LineLength]
[ERROR] /home/student/videosdb/./src/classes/User.java:74: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /home/student/videosdb/./src/classes/User.java:85:9: Class 'User' looks like designed for extension (can be subclassed), but the method 'addToViewed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'addToViewed' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/User.java:85:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/videosdb/./src/classes/User.java:85:35: Parameter title should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/User.java:94:9: Class 'User' looks like designed for extension (can be subclassed), but the method 'addRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'addRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/User.java:94:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/videosdb/./src/classes/User.java:94:33: Parameter title should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/User.java:94:47: Parameter grade should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/User.java:96: Line is longer than 100 characters (found 167). [LineLength]
[ERROR] /home/student/videosdb/./src/classes/User.java:108: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] /home/student/videosdb/./src/classes/User.java:114:9: Class 'User' looks like designed for extension (can be subclassed), but the method 'addRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'addRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/classes/User.java:114:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/videosdb/./src/classes/User.java:114:33: Parameter title should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/User.java:114:47: Parameter grade should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/User.java:114:61: Parameter season should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/classes/User.java:116: Line is longer than 100 characters (found 162). [LineLength]
[ERROR] /home/student/videosdb/./src/classes/User.java:120: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] /home/student/videosdb/./src/classes/User.java:124: Line is longer than 100 characters (found 128). [LineLength]
[ERROR] /home/student/videosdb/./src/main/Main.java:10:8: Unused import - org.json.JSONObject. [UnusedImports]
[ERROR] /home/student/videosdb/./src/Database/Database.java:1:9: Name 'Database' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/student/videosdb/./src/Database/Database.java:6:15: Using the '.*' form of import should be avoided - classes.*. [AvoidStarImport]
[ERROR] /home/student/videosdb/./src/Database/Database.java:7:14: Using the '.*' form of import should be avoided - fileio.*. [AvoidStarImport]
[ERROR] /home/student/videosdb/./src/Database/Database.java:9:8: Unused import - org.json.JSONObject. [UnusedImports]
[ERROR] /home/student/videosdb/./src/Database/Database.java:16:1: Class Database should be declared as final. [FinalClass]
[ERROR] /home/student/videosdb/./src/Database/Database.java:17:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/student/videosdb/./src/Database/Database.java:26:28: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/student/videosdb/./src/Database/Database.java:26:29: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/student/videosdb/./src/Database/Database.java:28:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/videosdb/./src/Database/Database.java:36:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/videosdb/./src/Database/Database.java:36:31: Parameter actorsList should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/Database/Database.java:36:52: 'actorsList' hides a field. [HiddenField]
[ERROR] /home/student/videosdb/./src/Database/Database.java:46:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/videosdb/./src/Database/Database.java:46:31: Parameter moviesList should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/Database/Database.java:46:52: 'moviesList' hides a field. [HiddenField]
[ERROR] /home/student/videosdb/./src/Database/Database.java:57:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/videosdb/./src/Database/Database.java:57:30: Parameter showsList should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/Database/Database.java:57:52: 'showsList' hides a field. [HiddenField]
[ERROR] /home/student/videosdb/./src/Database/Database.java:69:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/videosdb/./src/Database/Database.java:69:30: Parameter usersList should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/Database/Database.java:69:50: 'usersList' hides a field. [HiddenField]
[ERROR] /home/student/videosdb/./src/Database/Database.java:79:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/videosdb/./src/Database/Database.java:88:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/videosdb/./src/Database/Database.java:88:38: Parameter actions should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/Database/Database.java:113:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/videosdb/./src/actions/Commander.java:4:8: Unused import - org.json.JSONObject. [UnusedImports]
[ERROR] /home/student/videosdb/./src/actions/Commander.java:11:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/student/videosdb/./src/actions/Commander.java:12: Line has trailing spaces. [RegexpSingleline]
[ERROR] /home/student/videosdb/./src/actions/Commander.java:17:9: Class 'Commander' looks like designed for extension (can be subclassed), but the method 'addActions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Commander' final or making the method 'addActions' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/actions/Commander.java:17:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/videosdb/./src/actions/Commander.java:17:32: Parameter commands should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/Commander.java:17:54: 'commands' hides a field. [HiddenField]
[ERROR] /home/student/videosdb/./src/actions/Commander.java:20:25: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /home/student/videosdb/./src/actions/Commander.java:30: Line is longer than 100 characters (found 157). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Commander.java:31: Line is longer than 100 characters (found 137). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Commander.java:40:9: Class 'Commander' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Commander' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/actions/Commander.java:40:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/videosdb/./src/actions/Recommendation.java:9:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/student/videosdb/./src/actions/Recommendation.java:9:31: Parameter actionID should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/Recommendation.java:9:45: Parameter actionType should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/Recommendation.java:9:64: Parameter type should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/Recommendation.java:9:77: Parameter user should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/Recommendation.java:13:9: Class 'Recommendation' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Recommendation' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/actions/Recommendation.java:16:17: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /home/student/videosdb/./src/actions/Recommendation.java:19: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Recommendation.java:24:43: Comment matches to-do format 'TODO:'. [TodoComment]
[ERROR] /home/student/videosdb/./src/actions/BasicCommand.java:8:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/student/videosdb/./src/actions/BasicCommand.java:12: Line is longer than 100 characters (found 128). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/BasicCommand.java:12:29: Parameter actionID should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/BasicCommand.java:12:43: Parameter actionType should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/BasicCommand.java:12:62: Parameter type should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/BasicCommand.java:12:75: Parameter user should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/BasicCommand.java:12:88: Parameter title should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/BasicCommand.java:12:102: Parameter grade should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/BasicCommand.java:12:116: Parameter season should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/BasicCommand.java:19:9: Class 'BasicCommand' looks like designed for extension (can be subclassed), but the method 'getTitle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BasicCommand' final or making the method 'getTitle' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/actions/BasicCommand.java:23:9: Class 'BasicCommand' looks like designed for extension (can be subclassed), but the method 'getGrade' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BasicCommand' final or making the method 'getGrade' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/actions/BasicCommand.java:27:9: Class 'BasicCommand' looks like designed for extension (can be subclassed), but the method 'getSeason' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BasicCommand' final or making the method 'getSeason' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/actions/BasicCommand.java:31:9: Class 'BasicCommand' looks like designed for extension (can be subclassed), but the method 'setTitle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BasicCommand' final or making the method 'setTitle' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/actions/BasicCommand.java:31:30: Parameter title should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/BasicCommand.java:35:9: Class 'BasicCommand' looks like designed for extension (can be subclassed), but the method 'setGrade' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BasicCommand' final or making the method 'setGrade' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/actions/BasicCommand.java:35:30: Parameter grade should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/BasicCommand.java:39:9: Class 'BasicCommand' looks like designed for extension (can be subclassed), but the method 'setSeason' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BasicCommand' final or making the method 'setSeason' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/actions/BasicCommand.java:39:31: Parameter season should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/BasicCommand.java:43:9: Class 'BasicCommand' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BasicCommand' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/actions/BasicCommand.java:48: Line is longer than 100 characters (found 159). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/BasicCommand.java:51:17: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /home/student/videosdb/./src/actions/Action.java:6:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/student/videosdb/./src/actions/Action.java:11:23: Parameter actionID should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/Action.java:11:37: Parameter actionType should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/Action.java:11:56: Parameter type should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/Action.java:11:69: Parameter user should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/Action.java:17:9: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/actions/Action.java:21:9: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getActionID' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getActionID' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/actions/Action.java:25:9: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getActionType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getActionType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/actions/Action.java:29:9: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/actions/Action.java:33:9: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/actions/Action.java:33:29: Parameter type should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/Action.java:37:9: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setActionID' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setActionID' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/actions/Action.java:37:33: Parameter actionID should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/Action.java:41:9: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setActionType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setActionType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/actions/Action.java:41:35: Parameter actionType should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/Action.java:45:9: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/actions/Action.java:45:29: Parameter user should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/Action.java:49:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/videosdb/./src/actions/Query.java:4:15: Using the '.*' form of import should be avoided - classes.*. [AvoidStarImport]
[ERROR] /home/student/videosdb/./src/actions/Query.java:8:8: Unused import - java.util.Collections. [UnusedImports]
[ERROR] /home/student/videosdb/./src/actions/Query.java:15:15: Unused import - java.lang.Integer.parseInt. [UnusedImports]
[ERROR] /home/student/videosdb/./src/actions/Query.java:18:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/student/videosdb/./src/actions/Query.java:23:22: Parameter actionID should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/Query.java:23:36: Parameter actionType should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/Query.java:23:55: Parameter type should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/Query.java:23:68: Parameter user should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/Query.java:24: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Query.java:24:34: Parameter sortType should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/Query.java:24:51: Parameter criteria should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/Query.java:24:68: Parameter number should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/Query.java:24:80: Parameter filters should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/Query.java:32:46: '3' is a magic number. [MagicNumber]
[ERROR] /home/student/videosdb/./src/actions/Query.java:35:9: Class 'Query' looks like designed for extension (can be subclassed), but the method 'getNumber' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Query' final or making the method 'getNumber' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/actions/Query.java:39:9: Class 'Query' looks like designed for extension (can be subclassed), but the method 'getFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Query' final or making the method 'getFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/actions/Query.java:43:9: Class 'Query' looks like designed for extension (can be subclassed), but the method 'filteredActorsList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Query' final or making the method 'filteredActorsList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/actions/Query.java:43:40: Parameter actors should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/Query.java:43:60: Parameter filters should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/Query.java:43:79: 'filters' hides a field. [HiddenField]
[ERROR] /home/student/videosdb/./src/actions/Query.java:44:33: '3' is a magic number. [MagicNumber]
[ERROR] /home/student/videosdb/./src/actions/Query.java:44:60: '3' is a magic number. [MagicNumber]
[ERROR] /home/student/videosdb/./src/actions/Query.java:45:71: '3' is a magic number. [MagicNumber]
[ERROR] /home/student/videosdb/./src/actions/Query.java:70: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Query.java:71: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Query.java:85:9: Class 'Query' looks like designed for extension (can be subclassed), but the method 'queryActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Query' final or making the method 'queryActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/actions/Query.java:85:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/videosdb/./src/actions/Query.java:86: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Query.java:89:17: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /home/student/videosdb/./src/actions/Query.java:91: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Query.java:97: Line is longer than 100 characters (found 140). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Query.java:100: Line is longer than 100 characters (found 116). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Query.java:106: Line is longer than 100 characters (found 143). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Query.java:109: Line is longer than 100 characters (found 145). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Query.java:115: Line is longer than 100 characters (found 142). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Query.java:137:9: Class 'Query' looks like designed for extension (can be subclassed), but the method 'filteredMoviesList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Query' final or making the method 'filteredMoviesList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/actions/Query.java:137:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/videosdb/./src/actions/Query.java:137:47: Parameter movies should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/Query.java:137:67: Parameter filters should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/Query.java:137:86: 'filters' hides a field. [HiddenField]
[ERROR] /home/student/videosdb/./src/actions/Query.java:142: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Query.java:164:9: Class 'Query' looks like designed for extension (can be subclassed), but the method 'queryMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Query' final or making the method 'queryMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/actions/Query.java:164:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/videosdb/./src/actions/Query.java:165: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Query.java:167:17: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /home/student/videosdb/./src/actions/Query.java:169: Line is longer than 100 characters (found 139). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Query.java:175: Line is longer than 100 characters (found 137). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Query.java:178: Line is longer than 100 characters (found 138). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Query.java:184: Line is longer than 100 characters (found 134). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Query.java:187: Line is longer than 100 characters (found 142). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Query.java:192: Line is longer than 100 characters (found 138). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Query.java:196: Line is longer than 100 characters (found 146). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Query.java:202: Line is longer than 100 characters (found 141). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Query.java:224:9: Class 'Query' looks like designed for extension (can be subclassed), but the method 'filteredShowsList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Query' final or making the method 'filteredShowsList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/actions/Query.java:224:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/videosdb/./src/actions/Query.java:224:45: Parameter shows should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/Query.java:224:63: Parameter filters should be final. [FinalParameters]
[ERROR] /home/student/videosdb/./src/actions/Query.java:224:82: 'filters' hides a field. [HiddenField]
[ERROR] /home/student/videosdb/./src/actions/Query.java:229: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Query.java:251:9: Class 'Query' looks like designed for extension (can be subclassed), but the method 'queryShows' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Query' final or making the method 'queryShows' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/actions/Query.java:251:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/videosdb/./src/actions/Query.java:252: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Query.java:255:17: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /home/student/videosdb/./src/actions/Query.java:257: Line is longer than 100 characters (found 136). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Query.java:263: Line is longer than 100 characters (found 136). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Query.java:266: Line is longer than 100 characters (found 135). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Query.java:272: Line is longer than 100 characters (found 133). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Query.java:275: Line is longer than 100 characters (found 139). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Query.java:280: Line is longer than 100 characters (found 137). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Query.java:284: Line is longer than 100 characters (found 143). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Query.java:290: Line is longer than 100 characters (found 140). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Query.java:312:9: Class 'Query' looks like designed for extension (can be subclassed), but the method 'queryUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Query' final or making the method 'queryUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/actions/Query.java:312:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/videosdb/./src/actions/Query.java:314: Line is longer than 100 characters (found 134). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Query.java:320: Line is longer than 100 characters (found 120). [LineLength]
[ERROR] /home/student/videosdb/./src/actions/Query.java:337:9: Class 'Query' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Query' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/videosdb/./src/actions/Query.java:341:17: switch without "default" clause. [MissingSwitchDefault]
Audit done.
Checkstyle ends with 299 errors.
